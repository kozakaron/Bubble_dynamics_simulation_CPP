#ifndef CHEMKIN_AR_HE_H
#define CHEMKIN_AR_HE_H
#include <array>
#include <string>
#include "parameters.h"

using std::array;
using std::string;

namespace par{
const string model = "chemkin_ar_he";
const string input_file = "chemkin_AR_HE_FIXED_by_Cantera.inp";


/*________________________________Species________________________________*/

constexpr size_t num_elements = 6;    // Number of elements
constexpr size_t num_species = 12;    // Number of species
constexpr int index_of_water = 5;    // -1 if H2O is not in mechanism
const array<string, 6> elements = {{  "C",  "H",  "N",  "O", "AR", "HE"}};
//                                     {         0,         1,         2,         3,         4,         5,         6,         7,         8,         9,        10,        11}
const array<string, 12> species =      {{       "H",      "H2",       "O",      "O2",      "OH",     "H2O",      "N2",     "HO2",    "H2O2",      "AR",      "HE",    "OHEX"}};
enum index                             {     H =  0,   H2 =  1,    O =  2,   O2 =  3,   OH =  4,  H2O =  5,   N2 =  6,  HO2 =  7, H2O2 =  8,   AR =  9,   HE = 10, OHEX = 11};
// molar mass [g/mol]
constexpr array<double, 12> W =       {{   1.00797,   2.01594,   15.9994,   31.9988,  17.00737,  18.01534,   28.0134,  33.00677,  34.01474,    39.948,    4.0026,  17.00737}};
// thermal conductivity [W / m / K]
constexpr array<double, 12> lambdas = {{       0.0,    0.1805,       0.0,   0.02658,       0.0,     0.016,   0.02583,       0.0,    0.5863,    0.0177,     0.151,       0.0}};



/*________________________________NASA polynomials________________________________*/

// degree of NASA polynomials
constexpr size_t NASA_order = 5;

// Temperature ranges for NASA polynomials [K]
constexpr std::array<std::array<double, 3>, 12> temp_range = {{
    //   T_low   T_high    T_mid 
    {   200.0,  6000.0,  1000.0},    // H
    {   200.0,  6000.0,  1000.0},    // H2
    {   200.0,  6000.0,  1000.0},    // O
    {   200.0,  6000.0,  1000.0},    // O2
    {   200.0,  6000.0,  1000.0},    // OH
    {   200.0,  6000.0,  1000.0},    // H2O
    {   200.0,  6000.0,  1000.0},    // N2
    {   200.0,  5000.0,  1000.0},    // HO2
    {   200.0,  6000.0,  1000.0},    // H2O2
    {   200.0,  6000.0,  1000.0},    // AR
    {   200.0,  6000.0,  1000.0},    // HE
    {   300.0,  5000.0,  1000.0}     // OHEX
}};

// LOW NASA coefficients
constexpr std::array<std::array<double, 7>, 12> a_low = {{
    //             a_1              a_2              a_3              a_4              a_5              a_6              a_7 
    {             2.5, -1.21434192e-16,  3.14642268e-19,   -3.308722e-22,  1.21191563e-25,        25473.66,     -0.44668285},    // H
    {      2.68763434,   0.00508352924, -1.09134795e-05,  9.75972638e-09, -2.98961778e-12,     -948.720664,    -0.706735279},    // H2
    {      3.11201699,  -0.00280464778,  5.23974549e-06, -4.42444222e-09,  1.39393321e-12,      29127.3034,      2.27964278},    // O
    {      3.66627111,  -0.00201629566,  6.94873168e-06, -6.16244023e-09,   1.7591906e-12,     -1053.52472,      4.12801194},    // O2
    {      3.98520224,  -0.00234383614,  4.44744427e-06, -3.67375964e-09,  1.27653925e-12,      3369.50653,   -0.0765438871},    // OH
    {      4.23584018,  -0.00235035878,  7.44852451e-06, -6.61473728e-09,  2.24734749e-12,     -30297.0623,    -0.999620648},    // H2O
    {      3.58256851, -0.000558781407,  7.83391479e-07,  8.73631719e-10, -7.49971666e-13,     -1051.60018,      2.75873431},    // N2
    {      3.91532945,  -0.00148787475,  1.15167354e-05, -1.25715747e-08,    4.354213e-12,      298.674804,      5.28114803},    // HO2
    {      3.87148687,   0.00289650863,  6.57196077e-06, -9.23920581e-09,  3.42064984e-12,     -17666.9584,      5.06975745},    // H2O2
    {             2.5, -1.21434192e-16,  3.14642268e-19,   -3.308722e-22,  1.21191563e-25,        -745.375,      4.37967491},    // AR
    {             2.5, -1.21434192e-16,  3.14642268e-19,   -3.308722e-22,  1.21191563e-25,        -745.375,     0.928723974},    // HE
    {       3.6372573,  0.000185157457, -1.67634008e-06,  2.38739293e-09, -8.43216802e-13,      50021.3008,      1.35889652}     // OHEX
}};

// HIGH NASA coefficients
constexpr std::array<std::array<double, 7>, 12> a_high = {{
    //             a_1              a_2              a_3              a_4              a_5              a_6              a_7 
    {             2.5,             0.0,             0.0,             0.0,             0.0,        25473.66,     -0.44668285},    // H
    {      2.93286575,  0.000826608026, -1.46402364e-07,  1.54100414e-11,   -6.888048e-16,       -816.2239,     -1.02647801},    // H2
    {      2.54363697, -2.73162486e-05,  -4.1902952e-09,  4.95481845e-12, -4.79553694e-16,      29226.5295,      4.92264671},    // O
    {      3.66096065,  0.000656365811, -1.41149627e-07,  2.05797935e-11, -1.29913436e-15,     -1214.90829,      3.41609021},    // O2
    {      2.83853033,   0.00110741289, -2.94000209e-07,  4.20698729e-11,  -2.4228989e-15,      3697.87047,      5.84498899},    // OH
    {       2.6770389,    0.0029731816,  -7.7376889e-07,   9.4433514e-11,  -4.2689991e-15,     -29886.2362,      6.88231731},    // H2O
    {      2.95257637,    0.0013969004, -4.92631603e-07,  7.86010195e-11, -4.60755204e-15,     -924.423063,      5.87156477},    // N2
    {      4.17228741,   0.00188117627, -3.46277286e-07,  1.94657549e-11,  1.76256905e-16,      34.5761323,      2.96009637},    // HO2
    {      4.57977305,   0.00405326003,  -1.2984473e-06,    1.982114e-10, -1.13968792e-14,     -18003.0958,      0.66774843},    // H2O2
    {             2.5,             0.0,             0.0,             0.0,             0.0,        -745.375,      4.37967491},    // AR
    {             2.5,             0.0,             0.0,             0.0,             0.0,        -745.375,     0.928723974},    // HE
    {         2.88273,    0.0010139743,   -2.276877e-07,    2.174683e-11,   -5.126305e-16,      50301.4063,      5.59571607}     // OHEX
}};



/*________________________________Reaction constants________________________________*/

constexpr size_t num_reactions = 30;    // Number of reactions

// Pre-exponential factors [cm^3/mol/s v 1/s]
constexpr std::array<double, 30> A = {{
      5071200000000000.0,           1255400.0,          13193000.0,             84999.0,          4.9806e+18,
      6165000000000000.0,           4.714e+18,          1.4818e+24,     4650000000000.0,           2123100.0,
        57734000000000.0,    32500000000000.0,      958400000000.0,      130000000000.0,  1604800000000000.0,
                214800.0,    24100000000000.0,          9.7543e+19,           9550000.0,     1740000000000.0,
        75900000000000.0,    15000000000000.0,     5930000000000.0,     2950000000000.0,      108000000000.0,
         6010000000000.0,     1310000000000.0,     1690000000000.0,           1450000.0,     2100000000000.0
}};

// Temperature exponent [-]
constexpr std::array<double, 30> b = {{
                -0.48596,             2.27039,             1.87803,             2.26419,            -1.21273,
                    -0.5,                -1.0,            -2.53792,                0.44,              2.1133,
                     0.0,                 0.0,             0.42008,                 0.0,                 0.0,
                  2.3219,                 0.0,            -1.92495,                 2.0,                 0.0,
                     0.0,                 0.0,                 0.5,                 0.5,                 0.5,
                     0.5,                 0.5,                 0.0,                 0.0,                 0.5
}};

// Activation energy [cal/mol]
constexpr std::array<double, 30> E = {{
             16128.31392,          6957.58464,          3151.30176,         -1784.96266,           612.09734,
                     0.0,                 0.0,           120.79791,                 0.0,          -1624.8937,
                171.0383,                 0.0,          -948.68928,         -1630.15978,         15551.03232,
             -3402.70243,          3970.40573,          9426.08448,          3970.40573,           318.03149,
              7269.73402,          5975.60976,          -860.08003,          -444.03984,         -1242.11923,
               -764.0784,          -167.02416,          4135.42282,                 0.0,          -478.04083
}};



/*________________________________Reaction matrixes________________________________*/

// Forward reaction matrix
constexpr std::array<std::array<char, 12>, 30> nu_forward = {{
    //  H  H2   O  O2  OH H2O  N2 HO2 H2O2  AR  HE OHEX 
    {  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0},    //  0. H+O2=O+OH
    {  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0},    //  1. O+H2=H+OH
    {  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  2. OH+H2=H+H2O
    {  0,  0,  0,  0,  2,  0,  0,  0,  0,  0,  0,  0},    //  3. 2OH=O+H2O
    {  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},    //  4. 2H+M=H2+M
    {  0,  0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0},    //  5. 2O+M=O2+M
    {  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0},    //  6. O+H+M=OH+M
    {  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  7. H+OH+M=H2O+M
    {  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0},    //  8. H+O2(+M)=HO2(+M)
    {  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0},    //  9. H+HO2=H2+O2
    {  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0},    // 10. HO2+H=2OH
    {  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0},    // 11. HO2+O=OH+O2
    {  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0},    // 12. HO2+OH=H2O+O2
    {  0,  0,  0,  0,  0,  0,  0,  2,  0,  0,  0,  0},    // 13. 2HO2=H2O2+O2
    {  0,  0,  0,  0,  0,  0,  0,  2,  0,  0,  0,  0},    // 14. 2HO2=H2O2+O2
    {  0,  0,  0,  0,  2,  0,  0,  0,  0,  0,  0,  0},    // 15. 2OH(+M)=H2O2(+M)
    {  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0},    // 16. H2O2+H=H2O+OH
    {  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0},    // 17. H2O2+H=H2+HO2
    {  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0},    // 18. H2O2+O=OH+HO2
    {  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0},    // 19. H2O2+OH=H2O+HO2
    {  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0},    // 20. H2O2+OH=H2O+HO2
    {  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0},    // 21. H+O+M=OHEX+M
    {  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1},    // 22. OHEX+H2O=OH+H2O
    {  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1},    // 23. OHEX+H2=OH+H2
    {  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1},    // 24. OHEX+N2=OH+N2
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1},    // 25. OHEX+OH=2OH
    {  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1},    // 26. OHEX+H=OH+H
    {  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1},    // 27. OHEX+AR=OH+AR
    {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1},    // 28. OHEX=OH+HV
    {  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1}     // 29. OHEX+O2=OH+O2
}};

// Backward reaction matrix
constexpr std::array<std::array<char, 12>, 30> nu_backward = {{
    //  H  H2   O  O2  OH H2O  N2 HO2 H2O2  AR  HE OHEX 
    {  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  0. H+O2=O+OH
    {  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  1. O+H2=H+OH
    {  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0},    //  2. OH+H2=H+H2O
    {  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0},    //  3. 2OH=O+H2O
    {  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},    //  4. 2H+M=H2+M
    {  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0},    //  5. 2O+M=O2+M
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  6. O+H+M=OH+M
    {  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0},    //  7. H+OH+M=H2O+M
    {  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0},    //  8. H+O2(+M)=HO2(+M)
    {  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0},    //  9. H+HO2=H2+O2
    {  0,  0,  0,  0,  2,  0,  0,  0,  0,  0,  0,  0},    // 10. HO2+H=2OH
    {  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0},    // 11. HO2+O=OH+O2
    {  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0},    // 12. HO2+OH=H2O+O2
    {  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0},    // 13. 2HO2=H2O2+O2
    {  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0},    // 14. 2HO2=H2O2+O2
    {  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0},    // 15. 2OH(+M)=H2O2(+M)
    {  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0},    // 16. H2O2+H=H2O+OH
    {  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0},    // 17. H2O2+H=H2+HO2
    {  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0},    // 18. H2O2+O=OH+HO2
    {  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0},    // 19. H2O2+OH=H2O+HO2
    {  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0},    // 20. H2O2+OH=H2O+HO2
    {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1},    // 21. H+O+M=OHEX+M
    {  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0},    // 22. OHEX+H2O=OH+H2O
    {  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    // 23. OHEX+H2=OH+H2
    {  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0},    // 24. OHEX+N2=OH+N2
    {  0,  0,  0,  0,  2,  0,  0,  0,  0,  0,  0,  0},    // 25. OHEX+OH=2OH
    {  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    // 26. OHEX+H=OH+H
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0},    // 27. OHEX+AR=OH+AR
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0},    // 28. OHEX=OH+HV
    {  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0}     // 29. OHEX+O2=OH+O2
}};

// Reaction matrix (nu = nu_backward - nu_forward)
constexpr std::array<std::array<char, 12>, 30> nu = {{
    //  H  H2   O  O2  OH H2O  N2 HO2 H2O2  AR  HE OHEX 
    { -1,  0,  1, -1,  1,  0,  0,  0,  0,  0,  0,  0},    //  0. H+O2=O+OH
    {  1, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  1. O+H2=H+OH
    {  1, -1,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0},    //  2. OH+H2=H+H2O
    {  0,  0,  1,  0, -2,  1,  0,  0,  0,  0,  0,  0},    //  3. 2OH=O+H2O
    { -2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},    //  4. 2H+M=H2+M
    {  0,  0, -2,  1,  0,  0,  0,  0,  0,  0,  0,  0},    //  5. 2O+M=O2+M
    { -1,  0, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0},    //  6. O+H+M=OH+M
    { -1,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0},    //  7. H+OH+M=H2O+M
    { -1,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0},    //  8. H+O2(+M)=HO2(+M)
    { -1,  1,  0,  1,  0,  0,  0, -1,  0,  0,  0,  0},    //  9. H+HO2=H2+O2
    { -1,  0,  0,  0,  2,  0,  0, -1,  0,  0,  0,  0},    // 10. HO2+H=2OH
    {  0,  0, -1,  1,  1,  0,  0, -1,  0,  0,  0,  0},    // 11. HO2+O=OH+O2
    {  0,  0,  0,  1, -1,  1,  0, -1,  0,  0,  0,  0},    // 12. HO2+OH=H2O+O2
    {  0,  0,  0,  1,  0,  0,  0, -2,  1,  0,  0,  0},    // 13. 2HO2=H2O2+O2
    {  0,  0,  0,  1,  0,  0,  0, -2,  1,  0,  0,  0},    // 14. 2HO2=H2O2+O2
    {  0,  0,  0,  0, -2,  0,  0,  0,  1,  0,  0,  0},    // 15. 2OH(+M)=H2O2(+M)
    { -1,  0,  0,  0,  1,  1,  0,  0, -1,  0,  0,  0},    // 16. H2O2+H=H2O+OH
    { -1,  1,  0,  0,  0,  0,  0,  1, -1,  0,  0,  0},    // 17. H2O2+H=H2+HO2
    {  0,  0, -1,  0,  1,  0,  0,  1, -1,  0,  0,  0},    // 18. H2O2+O=OH+HO2
    {  0,  0,  0,  0, -1,  1,  0,  1, -1,  0,  0,  0},    // 19. H2O2+OH=H2O+HO2
    {  0,  0,  0,  0, -1,  1,  0,  1, -1,  0,  0,  0},    // 20. H2O2+OH=H2O+HO2
    { -1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  1},    // 21. H+O+M=OHEX+M
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 22. OHEX+H2O=OH+H2O
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 23. OHEX+H2=OH+H2
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 24. OHEX+N2=OH+N2
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 25. OHEX+OH=2OH
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 26. OHEX+H=OH+H
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 27. OHEX+AR=OH+AR
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1},    // 28. OHEX=OH+HV
    {  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1}     // 29. OHEX+O2=OH+O2
}};



/*________________________________Third-body reactions________________________________*/

constexpr size_t num_third_bodies = 7;    // Number of third body reactions
constexpr std::array<size_t, 7> third_body_indexes{{   4,   5,   6,   7,   8,  15,  21}};

// third-body efficiency factors
constexpr std::array<std::array<double, 12>, 7> alfa = {{
    //       H       H2        O       O2       OH      H2O       N2      HO2     H2O2       AR       HE     OHEX 
    {     1.0,     2.5,     1.0,     1.0,     1.0,    12.0,     1.0,     1.0,     1.0,     1.0,    0.83,     1.0},    //  4. 2H+M=H2+M
    {     1.0,     2.5,     1.0,     1.0,     1.0,    12.0,     1.0,     1.0,     1.0,    0.83,    0.83,     1.0},    //  5. 2O+M=O2+M
    {     1.0,     2.5,     1.0,     1.0,     1.0,    12.0,     1.0,     1.0,     1.0,    0.75,    0.75,     1.0},    //  6. O+H+M=OH+M
    {     1.0,     2.5,     1.0,     1.0,     1.0,    12.0,     1.0,     1.0,     1.0,    0.38,    0.44,     1.0},    //  7. H+OH+M=H2O+M
    {     1.0,   1.511,     1.0,     1.0,     1.0,  11.372,     1.0,     1.0,     1.0,   0.474,    0.65,     1.0},    //  8. H+O2(+M)=HO2(+M)
    {     1.0,    2.47,     1.0,     0.8,     1.0,     5.0,     1.0,     1.0,    5.13,    0.67,    0.43,     1.0},    // 15. 2OH(+M)=H2O2(+M)
    {     1.0,     1.0,     1.0,     0.4,     1.0,     6.5,     0.4,     1.0,     1.0,    0.35,     1.0,     1.0}     // 21. H+O+M=OHEX+M
}};



/*________________________________Irreversible reactions________________________________*/

constexpr size_t num_irreversible = 0;    // Number of irreversible reactions
constexpr std::array<size_t, 0> irreversible_indexes = {{}};



/*________________________________Pressure-dependent reactions________________________________*/

constexpr size_t num_pressure_dependent = 2;    // Number of pressure dependent reactions
constexpr std::array<size_t, 2> pressure_dependent_indexes = {{   8,  15}};

constexpr std::array<reac_type, 2> pressure_dependent_reac_types = {reac_type::TROE, reac_type::TROE, };

// Fall-off parameters
constexpr std::array<std::array<double, 3>, 2> reac_const = {{
    //               A_0                b_0                E_0 
    {        5.2669e+19,          -1.37367,               0.0},    //  8. H+O2(+M)=HO2(+M)
    {        1.9928e+18,          -1.17797,      -4273.096032}     // 15. 2OH(+M)=H2O2(+M)
}};

// Troe parameters
constexpr std::array<std::array<double, 4>, 2> troe = {{
    //              alfa               T***                 T*                T** 
    {              0.67,             1e-30,             1e+30,             1e+30},    //  8. H+O2(+M)=HO2(+M)
    {              0.43,             1e-30,             1e+30,             1e+30}     // 15. 2OH(+M)=H2O2(+M)
}};

// SRI parameters
constexpr std::array<std::array<double, 5>, 1> sri = {{
    //                 a                  b                  c                  d                  e 
    {} 
}};

constexpr size_t num_plog = 0;    // Number of PLOG reactions

constexpr std::array<size_t, 0> plog_indexes = {{}};
constexpr std::array<size_t, 2> plog_seperators = {{   0,   1}};

// PLOG parameters
constexpr std::array<std::array<double, 4>, 1> plog = {{
    //               P_1                A_1                b_1                E_1 
    {} 
}};

}    // namespace par

#endif   // CHEMKIN_AR_HE_H
